version: '3.7'

services:
  connector:
    image: "ghcr.io/flightaware/firestarter/firestarter_connector:${FS_VERSION:-latest}"
    build:
      context: .
      dockerfile: connector/Dockerfile
    init: true
    networks:
      - internal
    ports:
      # Provides optional access to the raw Firehose stream for consumption
      # by non-dockerized applications
      - "${STREAMING_PORT:-127.0.0.1:1601}:1601"
    environment:
      # REQUIRED environment variables
      # Firehose account username
      - FH_USERNAME=${FH_USERNAME:?FH_USERNAME variable must be set}
      # Firehose account key
      - FH_APIKEY=${FH_APIKEY:?FH_APIKEY variable must be set}
      # Use a single topic for all events to ensure proper ordering per flight
      - KAFKA_TOPIC_NAME=events

      # OPTIONAL environment variables
      # Firehose URL, defaults to firehose-test.flightaware.com.
      # firehose.flightaware.com can also be used
      - SERVER
      # Streaming compression of incoming Firehose data. Valid values are gzip,
      # deflate, or compress. Leave blank to disable compression.
      - COMPRESSION
      # Frequency in seconds to print stats about connection (messages/bytes
      # per second). Set to 0 to disable.
      - PRINT_STATS_PERIOD
      # Frequency in seconds that Firehose should send a synthetic "keepalive"
      # message to help connector ensure the connection is still alive. If no
      # such message is received within roughly $keepalive seconds, connector
      # will automatically reconnect to Firehose.
      - KEEPALIVE
      # The number of times that the same pitr seen in consecutive keeplive
      # messages should trigger an error and a restart of the connection
      - KEEPALIVE_STALE_PITRS
      # "Time mode" of Firehose init command. Can be "live" or "pitr <pitr>";
      # range is currently not supported.
      # See https://flightaware.com/commercial/firehose/documentation/commands
      # for more details.
      - INIT_CMD_TIME
      # Whether to resume from the last PITR committed. If set to "true", then
      # rather than consuming from what is specified in INIT_CMD_TIME, we first
      # look at the last record in each partition and use the largest PITR seen
      # in the initiation command. Defaults to "false".
      - RESUME_FROM_LAST_PITR
      # Timeout in seconds to use when resuming from last pitr. Defaults to 3 seconds
      # but can be any float value.
      - RESUME_FROM_LAST_PITR_TIMEOUT
      # The "optional" section of the Firehose init command. Mostly consists of
      # filters for the data. Do not put username, password, keepalive, or
      # compression commands here. Documentation at
      # https://flightaware.com/commercial/firehose/documentation/commands
      - INIT_CMD_ARGS

      # PYTHON settings
      - PYTHONUNBUFFERED=1
    logging:
      driver: "json-file"
      options:
        max-size: "10mb"
        max-file: "5"
    depends_on:
      - kafka

  db-updater:
    image: "ghcr.io/flightaware/firestarter/firestarter_db-updater:${FS_VERSION:-latest}"
    build:
      context: .
      dockerfile: db-updater/Dockerfile
    init: true
    networks:
      - internal
    environment:
      # URL to database that will be updated based on Firehose contents.
      # Documentation at https://docs.sqlalchemy.org/en/13/core/engines.html#database-urls
      - DB_URL=${FLIGHTS_DB_URL:-sqlite:///db/flights.db}
      - PYTHONUNBUFFERED=1
      # Same kafka topic name as the producer of the feed that you want to consume
      - KAFKA_TOPIC_NAME=events
      # Consumers with the same group name will split the data between them,
      # but consumers with different group names will each receive all of the messages 
      - KAFKA_GROUP_NAME=group1
      # Set this to "flights" or "positions" depending on what kinds of messages this updater is handling
      - TABLE=flights
    volumes:
      - data:/home/firestarter/app/db
    logging:
      driver: "json-file"
      options:
        max-size: "10mb"
        max-file: "5"
    depends_on:
      - kafka

  s3-exporter:
    image: "ghcr.io/flightaware/firestarter/firestarter_s3-exporter:${FS_VERSION:-latest}"
    build:
      context: .
      dockerfile: s3-exporter/Dockerfile
    env_file: ./.env-s3-exporter
    init: true
    networks:
      - internal
    logging:
      driver: "json-file"
      options:
        max-size: "8mb"
        max-file: "3"
    depends_on:
      - kafka

  zookeeper:
    image: "bitnami/zookeeper:3.6.2"
    init: true
    networks:
      - internal
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    image: "bitnami/kafka:3.1"
    init: true
    networks:
      - internal
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Retain messages for 1 hour
      - KAFKA_CFG_LOG_RETENTION_HOURS=1
    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      - zookeeper

volumes:
  data:
  kafka_data:
  zookeeper_data:

networks:
  internal:
